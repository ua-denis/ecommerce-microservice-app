version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices_network

  product_db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: product_db
      POSTGRES_USER: product_user
      POSTGRES_PASSWORD: product_password
    ports:
      - "5432:5432"
    volumes:
      - product_db_data:/var/lib/postgresql/data
    networks:
      - microservices_network

  order_db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: order_password
    ports:
      - "5433:5432"
    volumes:
      - order_db_data:/var/lib/postgresql/data
    networks:
      - microservices_network

  shared:
    build:
      context: ./shared
      dockerfile: ./Dockerfile
    volumes:
      - ./shared:/var/www

  product_service:
    build:
      context: ./
      dockerfile: ./product-service/docker/Dockerfile
    volumes:
      - ./product-service:/var/www
      - ./shared:/var/www/shared
      - ./product-service/docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./product-service/logs:/var/log/supervisor
      - ./product-service/logs:/var/log/
    environment:
      APP_ENV: dev
      DATABASE_URL: postgresql://product_user:product_password@product_db:5432/product_db
    depends_on:
      - product_db
      - rabbitmq
      - shared
    networks:
      - microservices_network

  product_nginx:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./product-service:/var/www
      - ./product-service/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - PRODUCT_SERVICE_HOST=product_service
      - PRODUCT_SERVICE_PORT=9000
    depends_on:
      - product_service
    command: /bin/sh -c "envsubst < /etc/nginx/conf.d/default.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      - microservices_network

  order_service:
    build:
      context: ./
      dockerfile: ./order-service/docker/Dockerfile
    volumes:
      - ./order-service:/var/www
      - ./shared:/var/www/shared
      - ./order-service/docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./product-service/logs:/var/log/supervisor
      - ./product-service/logs:/var/log/
    environment:
      APP_ENV: dev
      DATABASE_URL: postgresql://order_user:order_password@order_db:5432/order_db
      PRODUCT_SERVICE_URL: http://product_nginx
    depends_on:
      - order_db
      - rabbitmq
      - shared
      - product_service
    networks:
      - microservices_network

  order_nginx:
    image: nginx:alpine
    ports:
      - "8082:80"
    volumes:
      - ./order-service:/var/www
      - ./order-service/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - ORDER_SERVICE_HOST=order_service
      - ORDER_SERVICE_PORT=9000
    depends_on:
      - order_service
    command: /bin/sh -c "envsubst < /etc/nginx/conf.d/default.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      - microservices_network

volumes:
  rabbitmq_data:
  product_db_data:
  order_db_data:

networks:
  microservices_network:
    driver: bridge